# This properties file describes the tools that are supported by Sanity4J.
# Variable substitution is available for tool locations and command lines. 
# For example, ${java} will be replaced by the path to the JRE executable.
# The Variables available are detailed in the table below.
#
# Variable          	Value
# --------          	-----
# java					Path to JRE executable.
# javaArgs				JRE arguments (memory, classpath, defines).
# products				The location of the tools directory.
# source				The path to the directory containing the combined sources to be analysed.
# classes				The path to the directory containing the combined classes to be analysed.
# libs					The path to the directory containing the combined libraries to be analysed.
# coverageDataFile		The unit test coverage data file.
# tempDir				The temporary directory location.
# File.separatorChar	OS-specific File path separator character.
# File.pathSeparator	OS-specific path separator character.
# outputFile			The location where the tool should place it's output.
# toolHome              The home directory for the tool (not available for ".home" properties).
#
# The following parameters must be defined for each tool:
# 
# sanity4j.tool.<tool id>.versions - The versions of the tool which are supported.
# sanity4j.tool.<tool id>.<version>.home - the installation directory for the tool.
# sanity4j.tool.<tool id>.<version>.runner - the class which runs the tool
# sanity4j.tool.<tool id>.<version>.reader - the class which reads the tool's result file.
# sanity4j.tool.<tool id>.<version>.command - the command-line to run the tool, if the runner is a subclass of AbstractToolRunner 
#

# The sanity4j.toolsToRun controls which tools will be run by Sanity4J. Multiple tools
# can be listed here, in a comma-separated list. Tools must match the ids in 
# the net.sf.sanity4j.util.Tool class. The Available tools are listed in the
# table below.
#
# ID            Name        URL                                 Description
# ------------  ----------  ----------------------------------  --------------------------------------------
# "checkstyle"	Checkstyle 	http://checkstyle.sourceforge.net/ 	Static source code analyser.
# "cobertura"	Cobertura 	http://cobertura.sourceforge.net/	Unit test coverage analysis.
# "findbugs"	FindBugs 	http://findbugs.sourceforge.net/	Static byte-code analyser.
# "pmd"			PMD 		http://pmd.sourceforge.net/			Static source code analyser.
# "pmd-cpd"		PMD CPD		http://pmd.sourceforge.net/			Detects copy & pasted source code.
#
sanity4j.toolsToRun=checkstyle,cobertura,findbugs,pmd,pmd-cpd

# Checkstyle config
sanity4j.tool.checkstyle.versions=4.4
sanity4j.tool.checkstyle.4.4.home=${products}${File.separatorChar}checkstyle-4.4
sanity4j.tool.checkstyle.4.4.runner=net.sf.sanity4j.workflow.tool.CheckStyleRunner
sanity4j.tool.checkstyle.4.4.reader=net.sf.sanity4j.workflow.tool.CheckStyleResultReader
sanity4j.tool.checkstyle.4.4.command="${java}" ${javaArgs} com.puppycrawl.tools.checkstyle.Main -c "${toolHome}${File.separatorChar}sun_checks.xml" -f xml -o "${outputFile}" -r ${source}

# Cobertura config
sanity4j.tool.cobertura.versions=1.9.2, 1.9, 1.8
sanity4j.tool.cobertura.1.8.home=${products}${File.separatorChar}cobertura-1.8
sanity4j.tool.cobertura.1.8.runner=net.sf.sanity4j.workflow.tool.CoberturaReportRunner
sanity4j.tool.cobertura.1.8.reader=net.sf.sanity4j.workflow.tool.CoberturaResultReader
sanity4j.tool.cobertura.1.8.command="${java}" ${javaArgs} net.sourceforge.cobertura.reporting.Main --datafile ${coverageDataFile} --format xml --destination "${tempDir}"
sanity4j.tool.cobertura.1.9.home=${products}${File.separatorChar}cobertura-1.9
sanity4j.tool.cobertura.1.9.runner=net.sf.sanity4j.workflow.tool.CoberturaReportRunner
sanity4j.tool.cobertura.1.9.reader=net.sf.sanity4j.workflow.tool.CoberturaResultReader
sanity4j.tool.cobertura.1.9.command="${java}" ${javaArgs} net.sourceforge.cobertura.reporting.Main --datafile ${coverageDataFile} --format xml --destination "${tempDir}"
sanity4j.tool.cobertura.1.9.2.home=${products}${File.separatorChar}cobertura-1.9.2
sanity4j.tool.cobertura.1.9.2.runner=net.sf.sanity4j.workflow.tool.CoberturaReportRunner
sanity4j.tool.cobertura.1.9.2.reader=net.sf.sanity4j.workflow.tool.CoberturaResultReader
sanity4j.tool.cobertura.1.9.2.command="${java}" ${javaArgs} net.sourceforge.cobertura.reporting.Main --datafile ${coverageDataFile} --format xml --destination "${tempDir}"

# FindBugs config
sanity4j.tool.findbugs.versions=1.3.9
sanity4j.tool.findbugs.1.3.9.home=${products}${File.separatorChar}findbugs-1.3.9
sanity4j.tool.findbugs.1.3.9.runner=net.sf.sanity4j.workflow.tool.FindBugsRunner
sanity4j.tool.findbugs.1.3.9.reader=net.sf.sanity4j.workflow.tool.FindBugsResultReader
sanity4j.tool.findbugs.1.3.9.command="${java}" -Dfindbugs.home="${toolHome}" ${javaArgs} edu.umd.cs.findbugs.FindBugs2 -project "${findBugsProjectFile}" -xml:withMessages -output "${outputFile}" 

# PMD config
sanity4j.tool.pmd.versions=4.2.5, 4.2.2, 4.2.1
sanity4j.tool.pmd.4.2.5.home=${products}${File.separatorChar}pmd-4.2.5
sanity4j.tool.pmd.4.2.5.runner=net.sf.sanity4j.workflow.tool.PmdRunner
sanity4j.tool.pmd.4.2.5.reader=net.sf.sanity4j.workflow.tool.PmdResultReader
sanity4j.tool.pmd.4.2.5.command="${java}" ${javaArgs} net.sourceforge.pmd.PMD "${source}" xml rulesets/basic.xml,rulesets/naming.xml,rulesets/unusedcode.xml,rulesets/design.xml,rulesets/imports.xml,rulesets/junit.xml,rulesets/strings.xml,rulesets/braces.xml,rulesets/codesize.xml,rulesets/javabeans.xml,rulesets/clone.xml,rulesets/coupling.xml,rulesets/strictexception.xml,rulesets/logging-java.xml 
sanity4j.tool.pmd.4.2.2.home=${products}${File.separatorChar}pmd-4.2.2
sanity4j.tool.pmd.4.2.2.runner=net.sf.sanity4j.workflow.tool.PmdRunner
sanity4j.tool.pmd.4.2.2.reader=net.sf.sanity4j.workflow.tool.PmdResultReader
sanity4j.tool.pmd.4.2.2.command="${java}" ${javaArgs} net.sourceforge.pmd.PMD "${source}" xml rulesets/basic.xml,rulesets/naming.xml,rulesets/unusedcode.xml,rulesets/design.xml,rulesets/imports.xml,rulesets/junit.xml,rulesets/strings.xml,rulesets/braces.xml,rulesets/codesize.xml,rulesets/javabeans.xml,rulesets/clone.xml,rulesets/coupling.xml,rulesets/strictexception.xml,rulesets/logging-java.xml 
sanity4j.tool.pmd.4.2.1.home=${products}${File.separatorChar}pmd-4.2.1
sanity4j.tool.pmd.4.2.1.runner=net.sf.sanity4j.workflow.tool.PmdRunner
sanity4j.tool.pmd.4.2.1.reader=net.sf.sanity4j.workflow.tool.PmdResultReader
sanity4j.tool.pmd.4.2.1.command="${java}" ${javaArgs} net.sourceforge.pmd.PMD "${source}" xml rulesets/basic.xml,rulesets/naming.xml,rulesets/unusedcode.xml,rulesets/design.xml,rulesets/imports.xml,rulesets/junit.xml,rulesets/strings.xml,rulesets/braces.xml,rulesets/codesize.xml,rulesets/javabeans.xml,rulesets/clone.xml,rulesets/coupling.xml,rulesets/strictexception.xml,rulesets/logging-java.xml 

# PMD-CPD config
sanity4j.tool.pmd-cpd.versions=4.2.5, 4.2.2, 4.2.1
sanity4j.tool.pmd-cpd.4.2.5.home=${products}${File.separatorChar}pmd-4.2.5
sanity4j.tool.pmd-cpd.4.2.5.runner=net.sf.sanity4j.workflow.tool.PmdCpdRunner
sanity4j.tool.pmd-cpd.4.2.5.reader=net.sf.sanity4j.workflow.tool.PmdCpdResultReader
sanity4j.tool.pmd-cpd.4.2.5.command="${java}" -Dfile.encoding=UTF-8 ${javaArgs} net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files "${source}" --format net.sourceforge.pmd.cpd.XMLRenderer
sanity4j.tool.pmd-cpd.4.2.2.home=${products}${File.separatorChar}pmd-4.2.2
sanity4j.tool.pmd-cpd.4.2.2.runner=net.sf.sanity4j.workflow.tool.PmdCpdRunner
sanity4j.tool.pmd-cpd.4.2.2.reader=net.sf.sanity4j.workflow.tool.PmdCpdResultReader
sanity4j.tool.pmd-cpd.4.2.2.command="${java}" -Dfile.encoding=UTF-8 ${javaArgs} net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files "${source}" --format net.sourceforge.pmd.cpd.XMLRenderer
sanity4j.tool.pmd-cpd.4.2.1.home=${products}${File.separatorChar}pmd-4.2.1
sanity4j.tool.pmd-cpd.4.2.1.runner=net.sf.sanity4j.workflow.tool.PmdCpdRunner
sanity4j.tool.pmd-cpd.4.2.1.reader=net.sf.sanity4j.workflow.tool.PmdCpdResultReader
sanity4j.tool.pmd-cpd.4.2.1.command="${java}" -Dfile.encoding=UTF-8 ${javaArgs} net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files "${source}" --format net.sourceforge.pmd.cpd.XMLRenderer

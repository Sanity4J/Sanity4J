Sanity4J Maven plugin user guide

* Intoduction

  Sanity4J has been created in order to simplify running ad-hoc static code 
  analysis over Java projects using a standardised set of rules types and priorities.

  Various tools are used to conduct the analysis, each with their own set of
  requirements. Both bytecode and source code are analysed, to ensure the best
  chance of finding potential problems. Sanity4J presents a single interface 
  to run all the tools and produce a combined report presenting all the findings 
  in a easily accessible manner.

* Integrating Sanity4J into your Maven project.

  To run the Maven Plugin, you will need the following:

	* The Sanity4J jar & POM.
	
	* Maven 3+
	
	* JDK/JRE 1.5.x+
	
	* A directory containing the tools needed by Sanity4J (see parameters below). *
	
	* A Maven project, optionally with a Cobertura plugin already included.
	
	* Depending on the size of your project, you may need to increase the memory available to 
	  Maven. This can be set using the MAVEN_OPTS environment variable, e.g. "<<<set MAVEN_OPTS=-Xmx512M>>>" 
	  to use 512MB max heap.

** Parameters

*------------------------+--------------------------------------------------------+-----------+
|| Parameter             || Description                                           || Required |
*------------------------+--------------------------------------------------------+-----------+
| productsDir            | The productsDir must point to a directory containing   | Yes *     |
|                        | all the tools in use. For example, with a default      |           |
|                        | configuration, these could be findbugs-2.0.1,          |           |
|                        | pmd-5.0.4, checkstyle-5.6 and cobertura-2.0.1.         |           |
|                        |                                                        |           |
|                        | The 3rd party product tools can also be configured     |           |
|                        | using Maven plugin dependencies. If this is the case   |           |
|                        | then this parameter is not required. See the notes     |           |
|                        | below.                                                 |           |
*------------------------+--------------------------------------------------------+-----------+
| reportDir              | The report output directory. This parameter defaults   | No        |
|                        | to the project's site directory.                       |           |
*------------------------+--------------------------------------------------------+-----------+
| coverageDataFile       | The location of a coverage data file (e.g.             | No        |
|                        | cobertura.ser for Cobertura) if you want to include    |           |
|                        | unit testing coverage data in your report. If this     |           |
|                        | parameter is omitted, it is assumed that the default   |           |
|                        | Cobertura data file will be used.                      |           |
*------------------------+--------------------------------------------------------+-----------+
| aggregate              | If this Maven project is a multi module parent, then   | No        |
|                        | setting aggregate to true will enable merging of       |           |
|                        | coverage data files.                                   |           |
*------------------------+--------------------------------------------------------+-----------+
| coverageMergeDataFile  | The location of the merged coverage data file.         | No        |
|                        | Only used when aggregate is true. If this parameter is |           |
|                        | omitted, then cobertura-merged.ser will be used.       |           |
*------------------------+--------------------------------------------------------+-----------+
| externalPropertiesPath | The path location of the sanity4j.properties file.     | No        |
|                        | The default is the current directory.                  |           |
*------------------------+--------------------------------------------------------+-----------+
| additionalProperties   | Any additional properties passed to the tools.         | No        |
|                        | These should be in the same format as a normal         |           |
|                        | properties file, ie with name = value pairs.           |           |
*------------------------+--------------------------------------------------------+-----------+
| checkStyleConfig       | The configuration passed to the Checkstyle             | No        |
|                        | ${sanity4j.tool.checkstyle.command} as                 |           |
|                        | ${sanity4j.tool.checkstyle.config}.                    |           |
|                        |                                                        |           |
|                        | The resource can be a file contained within a jar file |           |
|                        | on the classpath, or an external file in the file      |           |
|                        | system. If the resource is a jar, then the name is     |           |
|                        | compared with the classpath and the full path to the   |           |
|                        | jar is then passed to the tool instead.                |           |
*------------------------+--------------------------------------------------------+-----------+
| findBugsConfig         | The configuration passed to the FindBugs               | No        |
|                        | ${sanity4j.tool.findbugs.command} as                   |           |
|                        | ${sanity4j.tool.findbugs.config}.                      |           |
|                        |                                                        |           |
|                        | The resource can be a file contained within a jar file |           |
|                        | on the classpath, or an external file in the file      |           |
|                        | system. If the resource is a jar, then the name is     |           |
|                        | compared with the classpath and the full path to the   |           |
|                        | jar is then passed to the tool instead.                |           |
*------------------------+--------------------------------------------------------+-----------+
| pmdConfig              | The configuration passed to the PMD                    | No        |
|                        | ${sanity4j.tool.pmd.command} as                        |           |
|                        | ${sanity4j.tool.pmd.config}.                           |           |
|                        |                                                        |           |
|                        | The resource can be a file contained within a jar file |           |
|                        | on the classpath, or an external file in the file      |           |
|                        | system. If the resource is a jar, then the name is     |           |
|                        | compared with the classpath and the full path to the   |           |
|                        | jar is then passed to the tool instead.                |           |
*------------------------+--------------------------------------------------------+-----------+
| javaRuntime            | The full path to the java run-time to use.             | No        |
|                        | If not specified, "java" is used.                      |           |
*------------------------+--------------------------------------------------------+-----------+
| summaryDataFile        | The location of a (persistent) summary data file if    | No        |
|                        | you want to include trend graphs over time.            |           |
*------------------------+--------------------------------------------------------+-----------+
| includeToolOutput      | If set to "true", the raw tool xml output is also      | No        |
|                        | copied into the report directory. This is only useful  |           |
|                        | if there is some other part of your build process that |           |
|                        | requires it.                                           |           |
*------------------------+--------------------------------------------------------+-----------+
| sources                | This element accepts nested Paths pointing             | No        |
|                        | to the location of the target project's source only.   |           |
|                        | If you have multiple source directories contained      |           |
|                        | within a main directory, you can just list the main    |           |
|                        | directory here - the task will search for all source   |           |
|                        | directories. The default is to use the project's "src" |           |
|                        | directory.                                             |           |
*------------------------+--------------------------------------------------------+-----------+
| classes                | This element accepts nested paths pointing to          | No        |
|                        | the location of the target project's built             |           |
|                        | classes/jars only. The default is to use the project's |           |
|                        | "target/classes" and "target/test-classes"             |           |
|                        | directories.                                           |           |
*------------------------+--------------------------------------------------------+-----------+
| libraries              | This element accepts nested Paths / FileSets pointing  | No        |
|                        | to the location of jars/classes that the target        |           |
|                        | project depends on. Don't use e.g. an entire local     |           |
|                        | maven repository; only include direct dependencies.    |           |
|                        | The default is to use the project's test class path.   |           |
*------------------------+--------------------------------------------------------+-----------+
| useHistory             | Allows retrieval of the QA statistics history CSV file | No        |
|                        | from the current deployed site. For this to work the   |           |
|                        | Distribution Management must be defined within your    |           |
|                        | project's POM file for the location of the Site.       |           |
|                        | The default is true.                                   |           |
*------------------------+--------------------------------------------------------+-----------+

  The source / class / library paths will accept multiple path entries. If there are multiple 
  source / class directories, it is possible to specify a common parent directory and have the tool 
  find all the nested source/class directories.

  The products.dir must point to a directory containing all the tools in use. For example, with 
  a default configuration, these could be findbugs-2.0.1, pmd-5.0.4, checkstyle-5.6 and 
  cobertura-2.0.1.

  Below is a simple example XML to integrate Sanity4J into your project's POM.

+-------------------------------+
  <reporting>
    <plugins>
      ...
      <plugin>
        <groupId>net.sf.sanity4j</groupId>
        <artifactId>sanity4j</artifactId>
        <version>1.1.0</version>
                
        <configuration>
          <!-- Replace the following parameter with the location of the analysis tools --> 
          <productsDir>tools</productsDir>
        </configuration>
      </plugin>
      ...
    </plugins>
  </reporting>
+-------------------------------+

  Below is another example for Maven 3 where the config is passed
  in to the tools along with additional properties.

+-------------------------------+
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-site-plugin</artifactId>
      <configuration>
        <reportPlugins>
        <plugin>
          <groupId>net.sf.sanity4j</groupId>
          <artifactId>sanity4j</artifactId>
          <version>1.1.0</version>
          <configuration>
            <findBugsConfig>-exclude sanity4j_filter_exclude.xml</findBugsConfig>
            <pmdConfig>sanity4j_pmd_rules.xml</pmdConfig>
            <checkStyleConfig>sanity4j_checks.xml</checkStyleConfig>
            
            <additionalProperties>
              PMD.DoNotUseThreads.excludes       =.*
              PMD.UseProperClassLoader.excludes  =.*
            </additionalProperties>
          </configuration>
        </plugin>
      </reportPlugins>
    </configuration>
  </plugin>
+-------------------------------+

  Sarting with version 1.0.6, Sanity4J now supports Maven dependencies for configuring 
  3rd party product tools such as findbugs, pmd, checkstyle etc. As each tool may have 
  different versions of the same dependency, those dependencies need to be declared 
  separately. We do this by declaring them as plugins rather than actual project 
  dependencies.
  
  Below is an example Maven 3 configuration for Sanity4J. You may also note the
  use of the maven-dependency-plugin, this is used during the pre-site phase to
  download all the plugins and their dependencies to your local repository which 
  makes them available for Sanity4J during the site phase.
  
+-------------------------------+

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.0-beta-3</version>
                <configuration>
                    <reportPlugins>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-project-info-reports-plugin</artifactId>
                            <version>2.1.2</version>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.7</version>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>2.4</version>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>2.9</version>
                        </plugin>

                        <plugin>
                            <groupId>net.sf.sanity4j</groupId>
                            <artifactId>sanity4j</artifactId>
                            <version>1.1.0</version>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Resolve all the dependencies for sanity4j 3rd party products. -->
                        <id>resolve-plugins</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>resolve-plugins</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
      
            <plugin>
                <groupId>net.sf.sanity4j</groupId>
                <artifactId>sanity4j</artifactId>
                <version>1.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>5.6</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.cobertura</groupId>
                        <artifactId>cobertura</artifactId>
                        <version>2.0.1</version>
                    </dependency>                    
                    <dependency>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>findbugs</artifactId>
                        <version>2.0.1</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd</artifactId>
                        <version>5.0.4</version>
                    </dependency>
                </dependencies>                
            </plugin>
            
            <plugin>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>5.6</version>
                <dependencies>
                    <!-- 
                    If you have custom Checkstyle rules, you can include them here
	                <dependency>
	                    <groupId>com.mycompany</groupId>
	                    <artifactId>my_checkstyle_rules</artifactId>
	                    <version>1.0.0</version>
	                </dependency>
	                -->
                </dependencies>                
            </plugin>

            <plugin>
				<groupId>net.sourceforge.cobertura</groupId>
				<artifactId>cobertura</artifactId>
				<version>2.0.1</version>
                <dependencies>
                    <!-- Cobertura doesn't include this as a transient dependency -->
					<dependency>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
						<version>1.2.9</version>
					</dependency>
                </dependencies>                
            </plugin>

            <plugin>
			    <groupId>com.google.code.findbugs</groupId>
			    <artifactId>findbugs</artifactId>
			    <version>2.0.1</version>
                <dependencies>
                    <!-- 
                    If you have custom Findbugs rules, you can include them here
	                <dependency>
	                    <groupId>com.mycompany</groupId>
	                    <artifactId>my_findbugs_rules</artifactId>
	                    <version>1.0.0</version>
	                </dependency>
	                -->
                </dependencies>                
            </plugin>
            
            <plugin>
			    <groupId>net.sourceforge.pmd</groupId>
			    <artifactId>pmd</artifactId>
			    <version>5.0.4</version>
                <dependencies>
                    <!-- 
                    If you have custom PMD rules, you can include them here
	                <dependency>
	                    <groupId>com.mycompany</groupId>
	                    <artifactId>my_pmd_rules</artifactId>
	                    <version>1.0.0</version>
	                </dependency>
	                -->
                </dependencies>                
            </plugin>

        </plugins>
    </build>

+-------------------------------+

  Another option for retrieving the tools from Maven is to use the maven-dependency-plugin.
  The maven-dependency-plugin can be used to copy the tool JARs to a known location, then
  the productsDir parameter can be used to specify that location.
  
+-------------------------------+

    <build>
        <plugins>
        
            <!-- Copy the tools from a maven repository instead of using them from the local file system. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <id>sanity4j-tools-checkstyle</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/tools/checkstyle-5.6</outputDirectory>

                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.puppycrawl.tools</groupId>
                                    <artifactId>checkstyle</artifactId>
                                    <version>5.6</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>antlr</groupId>
                                    <artifactId>antlr</artifactId>
                                    <version>2.7.7</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-beanutils</groupId>
                                    <artifactId>commons-beanutils-core</artifactId>
                                    <version>1.8.3</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-cli</groupId>
                                    <artifactId>commons-cli</artifactId>
                                    <version>1.2</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.google.collections</groupId>
                                    <artifactId>google-collections</artifactId>
                                    <version>1.0</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-logging</groupId>
                                    <artifactId>commons-logging</artifactId>
                                    <version>1.0.4</version>
                                </artifactItem>
                            </artifactItems>

                        </configuration>
                    </execution>
                    <execution>
                        <id>sanity4j-tools-cobertura</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/tools/cobertura-2.0.1</outputDirectory>

                            <artifactItems>
								<artifactItem>
									<groupId>net.sourceforge.cobertura</groupId>
									<artifactId>cobertura</artifactId>
									<version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.ow2.asm</groupId>
									<artifactId>asm</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.ow2.asm</groupId>
									<artifactId>asm-tree</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.ow2.asm</groupId>
									<artifactId>asm-commons</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.ow2.asm</groupId>
									<artifactId>asm-util</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.ow2.asm</groupId>
									<artifactId>asm-analysis</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>oro</groupId>
									<artifactId>oro</artifactId>
									<version>2.0.8</version>
								</artifactItem>
								<artifactItem>
									<groupId>jaxen</groupId>
									<artifactId>jaxen</artifactId>
									<version>1.1-beta-8</version>
								</artifactItem>
								<artifactItem>
									<groupId>log4j</groupId>
									<artifactId>log4j</artifactId>
									<version>1.2.9</version>
								</artifactItem>
                            </artifactItems>

                        </configuration>
                    </execution>
                    <execution>
                        <id>sanity4j-tools-findbugs</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/tools/findbugs-2.0.1</outputDirectory>

                            <artifactItems>
								<artifactItem>
								    <groupId>com.google.code.findbugs</groupId>
								    <artifactId>findbugs</artifactId>
								    <version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.code.findbugs</groupId>
									<artifactId>bcel</artifactId>
									<version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.code.findbugs</groupId>
									<artifactId>jsr305</artifactId>
									<version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.code.findbugs</groupId>
									<artifactId>jFormatString</artifactId>
									<version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.google.code.findbugs</groupId>
									<artifactId>annotations</artifactId>
									<version>2.0.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>dom4j</groupId>
									<artifactId>dom4j</artifactId>
									<version>1.6.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>jaxen</groupId>
									<artifactId>jaxen</artifactId>
									<version>1.1.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>asm</groupId>
									<artifactId>asm</artifactId>
									<version>3.3</version>
								</artifactItem>
								<artifactItem>
									<groupId>asm</groupId>
									<artifactId>asm-tree</artifactId>
									<version>3.3</version>
								</artifactItem>
								<artifactItem>
									<groupId>asm</groupId>
									<artifactId>asm-commons</artifactId>
									<version>3.3</version>
								</artifactItem>
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
								</artifactItem>                           
							</artifactItems>

                        </configuration>
                    </execution>
                    <execution>
                        <id>sanity4j-tools-pmd</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/tools/pmd-5.0.4</outputDirectory>

                            <artifactItems>
								<artifactItem>
								    <groupId>net.sourceforge.pmd</groupId>
								    <artifactId>pmd</artifactId>
								    <version>5.0.4</version>
								</artifactItem>
								<artifactItem>
									<groupId>jaxen</groupId>
									<artifactId>jaxen</artifactId>
									<version>1.1.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>com.beust</groupId>
									<artifactId>jcommander</artifactId>
									<version>1.27</version>
								</artifactItem>
								<artifactItem>
									<groupId>asm</groupId>
									<artifactId>asm</artifactId>
									<version>3.2</version>
								</artifactItem>
								<artifactItem>
									<groupId>net.sourceforge.saxon</groupId>
									<artifactId>saxon</artifactId>
									<version>9.1.0.8</version>
								</artifactItem>
								<artifactItem>
									<groupId>net.sourceforge.saxon</groupId>
									<artifactId>saxon</artifactId>
									<version>9.1.0.8</version>
									<classifier>dom</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>org.mozilla</groupId>
									<artifactId>rhino</artifactId>
									<version>1.7R3</version>
								</artifactItem>
								<artifactItem>
									<groupId>junit</groupId>
									<artifactId>junit</artifactId>
									<version>4.4</version>
								</artifactItem>
								<artifactItem>
									<groupId>xerces</groupId>
									<artifactId>xercesImpl</artifactId>
									<version>2.9.1</version>
									<type>jar</type>
								</artifactItem>
								<artifactItem>
									<groupId>net.java.dev.javacc</groupId>
									<artifactId>javacc</artifactId>
									<version>4.1</version>
								</artifactItem>
								<artifactItem>
									<groupId>commons-io</groupId>
									<artifactId>commons-io</artifactId>
									<version>2.2</version>
								</artifactItem>
	                        </artifactItems>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

+-------------------------------+

  Then the productsDir is used to locate the directory where the tools
  were downloaded to.

+-------------------------------+

    <plugin>
        <groupId>net.sf.sanity4j</groupId>
        <artifactId>sanity4j</artifactId>
        <version>1.1.0</version>
        <configuration>
            <productsDir>${project.build.directory}/tools</productsDir>
        </configuration>
    </plugin>

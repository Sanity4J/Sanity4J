Sanity4J Ant Task user guide

* Intoduction

  Sanity4J has been created in order to simplify running ad-hoc static code 
  analysis over Java projects using a standardised set of rules types and priorities.

  Various tools are used to conduct the analysis, each with their own set of
  requirements. Both bytecode and source code are analysed, to ensure the best
  chance of finding potential problems. Sanity4J presents a single interface 
  to run all the tools and produce a combined report presenting all the findings 
  in a easily accessible manner.

* Running the Ant task

  To run the Ant task, you will need the following:

	* The Sanity4J jar file; sanity4j.jar
	
	* Apache Ant 1.6.5+
	
	* JDK/JRE 1.5.x+
	
	* A directory containing the tools needed by Sanity4J (see parameters below).
	
	* A built project, optionally with a Cobertura coverage data file.
	
	* Depending on the size of your project, you may need to increase the memory available to 
	  Ant. This can be set using the ANT_OPTS environment variable, e.g. "<<<set ANT_OPTS=-Xmx512M>>>" 
	  to use 512MB max heap.

** Ant Macros

  There are two Ant macros that can be run. 

  * sanity4j - The "santy4j" macro supports multiple cobertura coverage datafiles by merging them.
               This can also be run against a single coverage datafile without merging.
               Sanity4j will detect whether a merge is required based on the number of supplied datafiles.

  * sanity4j.run - The "sanity4j.run" macro supports only a single cobertura coverage datafile without merging.
                   This exists primarily to support backward compatability as Ant nested elements cannot
                   be made optional.

** Parameters

*--------------------------+--------------------------------------------------------+-----------+
|| Attribute               || Description                                           || Required |
*--------------------------+--------------------------------------------------------+-----------+
| products.dir             | The products.dir must point to a directory containing  | Yes       | 
|                          | all the tools in use. For example, with a default      |           |
|                          | configuration, these could be findbugs-1.3.9,          |           |
|                          | pmd-4.2.5, checkstyle-4.4 and cobertura-1.9.2          |           |
*--------------------------+--------------------------------------------------------+-----------+
| report.dir               | The report output directory.                           | Yes       |
*--------------------------+--------------------------------------------------------+-----------+
| coverage.data.file       | The location of a coverage data file (e.g.             | No        |
|                          | cobertura.ser for Cobertura) if you want to include    |           |
|                          | unit testing coverage data in your report.             |           |
*--------------------------+--------------------------------------------------------+-----------+
| coverage.merge.data.file | The location of the merged coverage data file.         | No        |
|                          | Must be used in conjunction with a list of             |           |
|                          | coverage.data.files nested elements, see below.        |           |
*--------------------------+--------------------------------------------------------+-----------+
| external.properties.path | The path location of the sanity4j.properties file.     | No        |
|                          | The default is the current directory.                  |           |
*--------------------------+--------------------------------------------------------+-----------+
| java.runtime             | The full path to the java run-time to use.             | No        | 
|                          | If not specified, "java" is used.                      |           |
*--------------------------+--------------------------------------------------------+-----------+
| summary.data.file        | The location of a (persistent) summary data file if    | No        | 
|                          | you want to include trend graphs over time.            |           |
*--------------------------+--------------------------------------------------------+-----------+
| include.tool.output      | If set to "true", the raw tool xml output is also      | No        | 
|                          | copied into the report directory. This is only useful  |           |
|                          | if there is some other part of your build process that |           |
|                          | requires it.                                           |           |
*--------------------------+--------------------------------------------------------+-----------+

** Parameters specified as nested elements

*------------------------+--------------------------------------------------------+-----------+
|| Attribute             || Description                                           || Required |
*------------------------+--------------------------------------------------------+-----------+
| source.path            | This element accepts nested Paths / FileSets pointing  | Yes       | 
|                        | to the location of the target project's source only.   |           |
|                        | If you have multiple source directories contained      |           |
|                        | within a main directory, you can just list the main    |           |
|                        | directory here - the task will search for all source   |           |
|                        | directories.                                           |           |
*------------------------+--------------------------------------------------------+-----------+
| class.path             | This element accepts nested Paths/FileSets pointing to | Yes       |
|                        | the location of the target project's built             |           |
|                        | classes/jars only.                                     |           |
*------------------------+--------------------------------------------------------+-----------+
| library.path           | This element accepts nested Paths / FileSets pointing  | No        |
|                        | to the location of jars/classes that the target        |           |
|                        | project depends on. Don't use e.g. an entire local     |           |
|                        | maven repository; only include direct dependencies.    |           |
*------------------------+--------------------------------------------------------+-----------+
| coverage.data.files    | This element accepts nested Paths / FileSets pointing  | No        |
|                        | to the location of coverage data files to be merged.   |           |
*------------------------+--------------------------------------------------------+-----------+
| configurations         | This element accepts nested "configuration" elements   | No        |
|                        | describing the "configuration" file passed to the      |           |
|                        | underlying tools.                                      |           |
*------------------------+--------------------------------------------------------+-----------+

  The source / class / library path will accept Filesets or Paths. If there are multiple source / class 
  directories, it is possible to specify a common parent directory and have the tool find all the 
  nested source/class directories.

  The products.dir must point to a directory containing all the tools in use. For example, with 
  a default configuration, these could be findbugs-1.3.9, pmd-4.2.5, checkstyle-4.4 and 
  cobertura-1.9.2         

  The configurations element accepts nested "configuration" elements.  "configuration" elements
  have the following attributes:

*---------------+-----------------------------------------------------------------+-----------+
|| Attribute    || Description                                                    || Required |     
*---------------+-----------------------------------------------------------------+-----------+
| tool          | The name of the tool for which the configuration is to be       | Yes       |
|               | specified ("checkstyle", "findbugs", "pmd")                     |           |
*---------------+-----------------------------------------------------------------+-----------+
| version       | The version of the tool for which the configuration is to be    | No        |
|               | specified.  (If no version is specified this configuration will |           |
|               | be used by all versions.)                                       |           |
*---------------+-----------------------------------------------------------------+-----------+
| config        | The configuration to be used.  Usually this is the name of a    | Yes       |
|               | file passed to the command line of the tool to specify the      |           |
|               | tool specific configuration.  However, this parameter is simply |           |
|               | substituted as the value of the ${sanity4j.tool.<tool>.config}  |           |
|               | parameter within the ${sanity4j.tool.<tool>.command} parameter  |           |
|               | that is used to specify the command line of the tool.  So the   |           |
|               | value specified, can be any set of options that make sense at   |           |
|               | the point of substitution within the                            |           |
|               | ${sanity4j.tool.<tool>command}.                                 |           |
|               |                                                                 |           |
|               | The resource can be a file contained within a jar file          |           |
|               | on the classpath, or an external file in the file system.       |           |
|               | If the resource is a jar, then the name is compared with the    |           |
|               | classpath and the full path to the jar is then passed to the    |           |
|               | tool instead.                                                   |           |
*---------------+-----------------------------------------------------------------+-----------+

  Below is a sample XML file with examples for both Ant macros.

+-------------------------------+
<project name="test_sanity4j_ant" default="analyse.test">

    <target name="analyse.test" depends="analyse.single, analyse.multi" />

    <!-- Run the analysis -->
    <target name="analyse.single"
        description="This target runs the QA tools against the given project. 
            The project's coverage task should have been run first.">

        <!-- Imports -->
        <typedef
            resource  ="sanity4j-ant.xml"
            classpath ="target/sanity4j-1.0.6-jar-with-dependencies.jar"/>

        <!-- Run the Sanity4J QA task -->
        <sanity4j.run
            products.dir="assembly/sanity4j-with-tools/tools"
            report.dir="target/sanity4j-ant-report-single"
            coverage.data.file="target/cobertura/cobertura.ser">

            <source.path>
               <fileset dir="src/main/java">
                  <include name="**/*.java"/>
               </fileset>
               <fileset dir="src/test/java">
                  <include name="**/*.java"/>
               </fileset>
            </source.path>

            <class.path>
               <path path="target/classes"/>
               <path path="target/test-classes"/>
            </class.path>

            <library.path>
               <path path="target/sanity4j-1.0.6-jar-with-dependencies.jar"/>
            </library.path>

            <configurations>
                <configuration tool="checkstyle" config="local_checkstyle_rules.xml"/>
            </configurations>

         </sanity4j.run>

    </target>

    <!-- Run the analysis -->
    <target name="analyse.multi"
        description="This target runs the QA tools against the given project,
            merging coverage datafiles. The project's coverage task should have been run first.">

        <!-- Imports -->
        <typedef
            resource  ="sanity4j-ant.xml"
            classpath ="target/sanity4j-1.0.6-jar-with-dependencies.jar"/>

        <!-- Run the Sanity4J QA task -->
        <sanity4j
            products.dir="assembly/sanity4j-with-tools/tools"
            report.dir="target/sanity4j-ant-report-mulit"
            coverage.merge.data.file="target/cobertura/cobertura-merged.ser">

            <source.path>
               <fileset dir="../sanity4j-test/maven2-multi/child1/src/main/java">
                  <include name="**/*.java"/>
               </fileset>
               <fileset dir="../sanity4j-test/maven2-multi/child1/src/test/java">
                  <include name="**/*.java"/>
               </fileset>
            </source.path>

            <class.path>
               <path path="../sanity4j-test/maven2-multi/child1/target/classes"/>
               <path path="../sanity4j-test/maven2-multi/child1/target/test-classes"/>
               
               <path path="../sanity4j-test/maven2-multi/child2/target/classes"/>
               <path path="../sanity4j-test/maven2-multi/child2/target/test-classes"/>
            </class.path>

            <library.path>
               <path path="target/sanity4j-1.0.6-jar-with-dependencies.jar"/>
            </library.path>

            <coverage.data.files>
               <path path="../sanity4j-test/maven2-multi/child1/target/cobertura/cobertura.ser"/>
               <path path="../sanity4j-test/maven2-multi/child2/target/cobertura/cobertura.ser"/>
            </coverage.data.files>

            <configurations>
                <configuration tool="findbugs" config="-pluginList local_plugin.jar"/>
                <configuration tool="pmd"      config="local_pmd_rules.xml"/>
            </configurations>

         </sanity4j>

    </target>

</project>
+-------------------------------+
